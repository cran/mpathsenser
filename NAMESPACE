# Generated by roxygen2: do not edit by hand

S3method(alias_column_names,accelerometer)
S3method(alias_column_names,activity)
S3method(alias_column_names,airquality)
S3method(alias_column_names,appusage)
S3method(alias_column_names,battery)
S3method(alias_column_names,bluetooth)
S3method(alias_column_names,connectivity)
S3method(alias_column_names,device)
S3method(alias_column_names,error)
S3method(alias_column_names,geofence)
S3method(alias_column_names,gyroscope)
S3method(alias_column_names,heartbeat)
S3method(alias_column_names,keyboard)
S3method(alias_column_names,light)
S3method(alias_column_names,location)
S3method(alias_column_names,memory)
S3method(alias_column_names,noise)
S3method(alias_column_names,pedometer)
S3method(alias_column_names,screen)
S3method(alias_column_names,timezone)
S3method(alias_column_names,weather)
S3method(alias_column_names,wifi)
S3method(plot,coverage)
S3method(unpack_sensor_data,accelerometer)
S3method(unpack_sensor_data,activity)
S3method(unpack_sensor_data,airquality)
S3method(unpack_sensor_data,appusage)
S3method(unpack_sensor_data,battery)
S3method(unpack_sensor_data,bluetooth)
S3method(unpack_sensor_data,connectivity)
S3method(unpack_sensor_data,default)
S3method(unpack_sensor_data,device)
S3method(unpack_sensor_data,error)
S3method(unpack_sensor_data,geofence)
S3method(unpack_sensor_data,gyroscope)
S3method(unpack_sensor_data,heartbeat)
S3method(unpack_sensor_data,keyboard)
S3method(unpack_sensor_data,light)
S3method(unpack_sensor_data,location)
S3method(unpack_sensor_data,memory)
S3method(unpack_sensor_data,noise)
S3method(unpack_sensor_data,pedometer)
S3method(unpack_sensor_data,screen)
S3method(unpack_sensor_data,timezone)
S3method(unpack_sensor_data,weather)
S3method(unpack_sensor_data,wifi)
export(add_gaps)
export(app_category)
export(bin_data)
export(ccopy)
export(close_db)
export(copy_db)
export(coverage)
export(create_db)
export(decrypt_gps)
export(device_info)
export(first_date)
export(fix_jsons)
export(freq)
export(geocode_rev)
export(get_data)
export(get_nrows)
export(get_participants)
export(get_processed_files)
export(get_studies)
export(haversine)
export(identify_gaps)
export(import)
export(index_db)
export(installed_apps)
export(last_date)
export(link)
export(link_db)
export(link_gaps)
export(moving_average)
export(open_db)
export(sensors)
export(test_jsons)
export(unzip_data)
export(vacuum_db)
importFrom(DBI,dbConnect)
importFrom(DBI,dbDisconnect)
importFrom(DBI,dbExecute)
importFrom(DBI,dbIsValid)
importFrom(dbplyr,window_order)
importFrom(dplyr,across)
importFrom(dplyr,any_of)
importFrom(dplyr,arrange)
importFrom(dplyr,bind_rows)
importFrom(dplyr,collect)
importFrom(dplyr,distinct)
importFrom(dplyr,filter)
importFrom(dplyr,group_by)
importFrom(dplyr,lag)
importFrom(dplyr,lead)
importFrom(dplyr,mutate)
importFrom(dplyr,n)
importFrom(dplyr,pull)
importFrom(dplyr,select)
importFrom(dplyr,slice)
importFrom(dplyr,summarise)
importFrom(dplyr,ungroup)
importFrom(lifecycle,deprecated)
importFrom(purrr,map)
importFrom(rlang,":=")
importFrom(rlang,.data)
importFrom(rlang,.env)
importFrom(rlang,abort)
importFrom(rlang,inform)
importFrom(rlang,warn)
importFrom(tibble,tibble)
importFrom(tidyr,complete)
importFrom(tidyr,drop_na)
importFrom(tidyr,nest)
importFrom(tidyr,unnest)
